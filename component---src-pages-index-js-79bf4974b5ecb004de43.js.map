{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["MainImage","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","Img","target","name","styles","query","L2DCanvas","live2dIsMounted","IndexPage","componentDidMount","script","document","createElement","src","body","appendChild","console","log","l2dstart","render","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3___default","a","Fragment","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","id","className","hidden","Component","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","data","metaDescription","siteMetadata","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired"],"mappings":"0PAOaA,gBAAYC,OAAAC,EAAA,EAAAD,CAAOE,IAAP,CAAAC,OAAA,aAAAH,CAAH,CAAAI,KAAA,SAAAC,OAAA,4FASTC,EAAK,aAYZC,EAAYP,OAAAC,EAAA,EAAAD,CAAA,UAAHG,OAAA,aAAGH,CAAH,CAAAI,KAAA,UAAAC,OAAA,4BAKXG,GAAkB,EAEhBC,oGACJC,kBAAA,WACE,IAAsB,IAAlBF,EAAwB,CAC1BA,GAAkB,EAClB,IAAMG,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAM,wBACbF,SAASG,KAAKC,YAAYL,QAG1BM,QAAQC,IAAI,gBACZC,cAKJC,OAAA,WACE,OACEpB,OAAAqB,EAAA,EAAArB,CAAAsB,EAAAC,EAAAC,SAAA,KAIExB,OAAAqB,EAAA,EAAArB,CAAA,WACEA,OAAAqB,EAAA,EAAArB,CAACyB,EAAA,EAAD,CAAKC,MAAM,SACX1B,OAAAqB,EAAA,EAAArB,CAAA,qBACAA,OAAAqB,EAAA,EAAArB,CAAA,yCAGAA,OAAAqB,EAAA,EAAArB,CAAA,OAAK2B,GAAI,UAAWC,UAAU,gBAC5B5B,OAAAqB,EAAA,EAAArB,CAAA,OAAK2B,GAAI,aAAcC,UAAU,eAC/B5B,OAAAqB,EAAA,EAAArB,CAAA,UAAQ6B,QAAM,EAACF,GAAI,YAAaC,UAAU,WAC1C5B,OAAAqB,EAAA,EAAArB,CAACO,EAAD,CAAWoB,GAAI,WAAYC,UAAU,qBA9B3BE,aAwCTrB,2GC/Df,SAASsB,EAATC,GAAiD,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAMT,EAASM,EAATN,MAC9BU,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEjC,OAAAyC,EAAA,EAAAzC,CAAC0C,EAAAnB,EAAD,CACEoB,eAAgB,CACdT,QAEFR,MAAOA,EACPkB,cAAa,QAAUR,EAAKI,aAAad,MACzCS,KAAM,CACJ,CACE/B,KAAI,cACJyC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAASnB,GAEX,CACEoB,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACEzC,KAAI,eACJyC,QAAO,WAET,CACEzC,KAAI,kBACJyC,QAAST,EAAKI,aAAaO,QAE7B,CACE3C,KAAI,gBACJyC,QAASnB,GAEX,CACEtB,KAAI,sBACJyC,QAASN,IAEXS,OAAOb,KAKfJ,EAAIkB,aAAe,CACjBf,KAAI,KACJC,KAAM,GACNF,YAAW,IAGbF,EAAImB,UAAY,CACdjB,YAAakB,IAAUC,OACvBlB,KAAMiB,IAAUC,OAChBjB,KAAMgB,IAAUE,QAAQF,IAAUG,QAClC5B,MAAOyB,IAAUC,OAAOG,YAGXxB","file":"component---src-pages-index-js-79bf4974b5ecb004de43.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport SEO from \"../components/seo\"\r\nimport styled from \"@emotion/styled\"\r\nimport Img from 'gatsby-image'\r\nimport { graphql, withPrefix } from \"gatsby\"\r\nimport Helmet from 'react-helmet'\r\n\r\nexport const MainImage = styled(Img)`\r\n  max-height: 50vh;\r\n  margin: 0 auto;\r\n  @media only screen and (min-width: 1400px) {\r\n    width: 1280px;\r\n  }\r\n`\r\n\r\n\r\nexport const query = graphql`\r\n  query {\r\n    mainBg: file(relativePath: { eq: \"mainbg.png\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 800) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst L2DCanvas = styled.canvas`\r\n  width: 40vh;\r\n  height: 65vh;\r\n`\r\n\r\nlet live2dIsMounted = false;\r\n\r\nclass IndexPage extends Component {\r\n  componentDidMount () {\r\n    if (live2dIsMounted===false){\r\n      live2dIsMounted = true;\r\n      const script = document.createElement(\"script\");\r\n      script.src = \"lib/live2d/l2d.min.js\";\r\n      document.body.appendChild(script);\r\n    }  else {\r\n      {/*eslint-disable no-undef*/}\r\n      console.log(\"start live2d\")\r\n      l2dstart();\r\n      {/*eslint-enable no-undef*/}\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {/*<Helmet>*/}\r\n        {/*  <script src={withPrefix('lib/live2d/houscript.js')} type=\"text/javascript\" />*/}\r\n        {/*</Helmet>*/}\r\n        <div>\r\n          <SEO title=\"Home\" />\r\n          <h1>Welcome</h1>\r\n          <p>This supposed to be my title</p>\r\n          {/*<MainImage fluid={props.data.mainBg.childImageSharp.fluid}  imgStyle={{objectFit:'contain'}} />*/}\r\n\r\n          <div id={'content'} className=\"main-content\"  >\r\n            <div id={'l2d_canvas'} className=\"sub-content\">\r\n              <button hidden id={'btnChange'} className=\"active\"></button>\r\n              <L2DCanvas id={'glcanvas'} className=\"glcanvas\"></L2DCanvas>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default IndexPage\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}