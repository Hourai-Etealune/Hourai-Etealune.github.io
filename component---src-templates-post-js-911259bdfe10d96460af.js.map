{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","react_pose__WEBPACK_IMPORTED_MODULE_2__","SideBar","styled","div","withConfig","displayName","componentId","LeftToRight","posed","enter","x","delay","opacity","transition","ease","duration","exit","PostContainer","RightToLeft","Separator","LineSeparator","scaleY","PostFrame","PostContent","_ref","post","data","markdownRemark","a","createElement","frontmatter","title","dangerouslySetInnerHTML","__html","html"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAA,KAOMU,EAAUC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,YAAGJ,CAAH,wEAOPK,EAAcC,YAAMP,EAANO,CAAe,CACjCC,MAAO,CACLC,EAAG,EACHC,MAAO,IACPC,QAAS,EACTC,WAAY,CAAEC,KAAM,UAAWC,SAAU,MAE3CC,KAAM,CACJN,GAAI,IACJE,QAAS,EACTC,WAAY,CAAEC,KAAM,SAAUC,SAAU,QAKtCE,EAAgBf,IAAOC,IAAVC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,YAAGJ,CAAH,qCAKbgB,EAAcV,YAAMS,EAANT,CAAqB,CACvCC,MAAO,CACLC,EAAG,EACHC,MAAO,IACPC,QAAS,EACTC,WAAY,CAAEC,KAAM,UAAWC,SAAU,MAE3CC,KAAM,CACJN,EAAG,IACHE,QAAS,EACTC,WAAY,CAAEC,KAAM,SAAUC,SAAU,QAItCI,EAAYjB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,YAAGJ,CAAH,kGASTkB,EAAgBZ,YAAMW,EAANX,CAAiB,CACrCC,MAAO,CACLG,QAAS,EACTS,OAAQ,EACRR,WAAY,CAAEC,KAAM,UAAWC,SAAU,OAE3CC,KAAM,CACJJ,QAAS,EACTS,OAAQ,EACRR,WAAY,CAAEC,KAAM,SAAUC,SAAU,SAItCO,EAAYpB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,YAAGJ,CAAH,yCAKTqB,EAAcrB,IAAOC,IAAVC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,YAAGJ,CAAH,oBAIFT,EAAA,iBAAA+B,GAAc,IACrBC,EADqBD,EAAXE,KACEC,eAClB,OACI9B,EAAA+B,EAAAC,cAAA,WAEIhC,EAAA+B,EAAAC,cAACP,EAAD,KACEzB,EAAA+B,EAAAC,cAACtB,EAAD,0BACAV,EAAA+B,EAAAC,cAACT,EAAD,MACAvB,EAAA+B,EAAAC,cAACX,EAAD,KACErB,EAAA+B,EAAAC,cAAA,UAAKJ,EAAKK,YAAYC,OACtBlC,EAAA+B,EAAAC,cAACN,EAAD,CAAaS,wBAAyB,CAAEC,OAAQR,EAAKS,YAQ5D,IAAMvC,EAAK","file":"component---src-templates-post-js-911259bdfe10d96460af.js","sourcesContent":["import React from \"react\"\r\nimport {  graphql } from 'gatsby'\r\nimport styled from \"styled-components\"\r\nimport posed from \"react-pose\";\r\n\r\n\r\n\r\nconst SideBar = styled.div`\r\n  width: 24%;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  text-align: left;\r\n`\r\n\r\nconst LeftToRight = posed(SideBar)({\r\n  enter: {\r\n    x: 0,\r\n    delay: 300,\r\n    opacity: 1,\r\n    transition: { ease: 'easeOut', duration: 700 }\r\n  },\r\n  exit: {\r\n    x: -600,\r\n    opacity: 0,\r\n    transition: { ease: 'easeIn', duration: 700 }\r\n  },\r\n})\r\n\r\n\r\nconst PostContainer = styled.div`\r\n  width: 75%;\r\n  display: inline-block;\r\n`\r\n\r\nconst RightToLeft = posed(PostContainer)({\r\n  enter: {\r\n    x: 0,\r\n    delay: 300,\r\n    opacity: 1,\r\n    transition: { ease: 'easeOut', duration: 700 }\r\n  },\r\n  exit: {\r\n    x: 400,\r\n    opacity: 0,\r\n    transition: { ease: 'easeIn', duration: 700 }\r\n  },\r\n})\r\n\r\nconst Separator = styled.div`\r\n  height: 100%;\r\n  width: 1px;\r\n  background-color: #5c5c5c;\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: 0;\r\n`\r\n\r\nconst LineSeparator = posed(Separator)({\r\n  enter: {\r\n    opacity: 1,\r\n    scaleY: 1,\r\n    transition: { ease: 'easeOut', duration: 1100 }\r\n  },\r\n  exit: {\r\n    opacity: 0,\r\n    scaleY: 0,\r\n    transition: { ease: 'easeIn', duration: 1100}\r\n  },\r\n})\r\n\r\nconst PostFrame = styled.div`\r\n  position: relative;\r\n  min-height: 300px;\r\n`\r\n\r\nconst PostContent = styled.div`\r\n  margin: 0 10px;\r\n`\r\n\r\nexport default ({ data }) => {\r\n  const post = data.markdownRemark\r\n  return (\r\n      <div>\r\n\r\n          <PostFrame>\r\n            <LeftToRight>Table of Content:</LeftToRight>\r\n            <LineSeparator/>\r\n            <RightToLeft >\r\n              <h1>{post.frontmatter.title}</h1>\r\n              <PostContent dangerouslySetInnerHTML={{ __html: post.html }}  />\r\n            </RightToLeft>\r\n\r\n          </PostFrame>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}