{"version":3,"sources":["webpack:///./src/pages/sandbox.js","webpack:///./src/components/seo.js"],"names":["MainImage","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","Img","target","name","styles","query","IndexPage","props","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","data","metaDescription","siteMetadata","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","a","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired"],"mappings":"iOAMaA,EAAYC,OAAAC,EAAA,EAAAD,CAAOE,IAAP,CAAAC,OAAA,aAAAH,CAAH,CAAAI,KAAA,SAAAC,OAAA,mCAMTC,EAAK,aAmBHC,UAPG,SAACC,GAAD,OAChBR,OAAAS,EAAA,EAAAT,CAAA,WACEA,OAAAS,EAAA,EAAAT,CAACU,EAAA,EAAD,CAAKC,MAAM,SACXX,OAAAS,EAAA,EAAAT,CAAA,oICfJ,SAASY,EAATC,GAAiD,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAML,EAASE,EAATF,MAC9BM,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEd,OAAAsB,EAAA,EAAAtB,CAACuB,EAAAC,EAAD,CACEC,eAAgB,CACdV,QAEFJ,MAAOA,EACPe,cAAa,QAAUT,EAAKI,aAAaV,MACzCK,KAAM,CACJ,CACEZ,KAAI,cACJuB,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAShB,GAEX,CACEiB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACEvB,KAAI,eACJuB,QAAO,WAET,CACEvB,KAAI,kBACJuB,QAASV,EAAKI,aAAaQ,QAE7B,CACEzB,KAAI,gBACJuB,QAAShB,GAEX,CACEP,KAAI,sBACJuB,QAASP,IAEXU,OAAOd,KAKfJ,EAAImB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNF,YAAW,IAGbF,EAAIoB,UAAY,CACdlB,YAAamB,IAAUC,OACvBnB,KAAMkB,IAAUC,OAChBlB,KAAMiB,IAAUE,QAAQF,IAAUG,QAClCzB,MAAOsB,IAAUC,OAAOG,YAGXzB","file":"component---src-pages-sandbox-js-a8d12852e31e77715729.js","sourcesContent":["import React from \"react\"\nimport SEO from \"../components/seo\"\nimport styled from \"@emotion/styled\"\nimport Img from 'gatsby-image'\nimport { graphql } from \"gatsby\"\n\nexport const MainImage = styled(Img)`\n  max-height: 50vh;\n  margin: 0 auto;\n`\n\n\nexport const query = graphql`\n  query {\n    mainBg: file(relativePath: { eq: \"mainbg.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 800) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n\nconst IndexPage = (props) => (\n  <div>\n    <SEO title=\"Home\" />\n    <p>Under Construction ;_;</p>\n  </div>\n)\n\nexport default IndexPage\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}